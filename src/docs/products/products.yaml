openapi: 3.0.1
info:
  title: Ecommerce API
  description: API for managing an e-commerce platform
servers:
  - url: http://localhost:8080
paths:
  /products:
    get:
      summary: Retrieves all products from the database
      tags:
        - Products
      responses:
        "200":
          description: Successfully retrieved all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
    post:
      summary: Creates a new product
      tags: 
        - Products
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: "#/components/requestBodies/CreateProduct"
      responses:
        "200":
          description: Product created successfully

  /products/{pid}:
    get:
      summary: Retrieves a product by its ID
      tags: 
        - Products
      parameters: 
        - name: pid
          in: path
          required: true
          description: ID of the product to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
    put:
      summary: Updates a product by its ID
      tags: 
        - Products
      parameters: 
        - name: pid
          in: path
          required: true
          description: ID of the product to update
          schema:
            type: string
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/requestBodies/UpdateProduct"
      responses:
        "200":
          description: Product updated successfully
        "404":
          description: Product not found
        "500":
          description: Internal server error
    delete:
      summary: Deletes a product by its ID
      tags: 
        - Products
      parameters: 
        - name: pid
          in: path
          required: true
          description: ID of the product to delete
          schema:
            type: string
      responses:
        "200":
          description: Product deleted successfully
        "404":
          description: Product not found
        "500":
          description: Internal server error

components:
  schemas:
    Product:
      type: object
      properties: 
        _id: 
          type: string
          description: ID generated by MongoDB
        title: 
          type: string
          description: Name of the product
        description: 
          type: string
          description: Description of the product
        code:
          type: string
          description: Code of the product
        price:
          type: number
          description: Price of the product
        status:
          type: boolean
          description: Status of the product
        stock:
          type: number
          description: Available stock of the product
        thumbnail:
          type: string
          description: Image of the product
        category:
          type: string
          description: Category of the product
        owner:
          type: object
          description: User who created the product
      example: 
        _id: "123456"
        title: "Monitor"
        description: "A high-quality monitor"
        code: "as35gf"
        price: 100
        status: true
        stock: 1
        thumbnail: "No image"
        category: "Electronics"
        owner: 
          _id: "66088579647e742c08da4adf"
  requestBodies: 
    CreateProduct:
      type: object
      properties: 
        title: 
          type: string
          description: Name of the product
        description: 
          type: string
          description: Description of the product
        code:
          type: string
          description: Code of the product
        price:
          type: number
          description: Price of the product
        status:
          type: boolean
          description: Status of the product
        stock:
          type: number
          description: Available stock of the product
        thumbnail:
          type: string
          description: Image of the product
        category:
          type: string
          description: Category of the product
      example: 
        title: "Monitor"
        description: "A high-quality monitor"
        code: "as35gf"
        price: 100
        status: true
        stock: 1
        thumbnail: "No image"
        category: "Electronics"
    UpdateProduct:
      type: object
      properties: 
        title: 
          type: string
          description: Name of the product
        description: 
          type: string
          description: Description of the product
        code:
          type: string
          description: Code of the product
        price:
          type: number
          description: Price of the product
        status:
          type: boolean
          description: Status of the product
        stock:
          type: number
          description: Available stock of the product
        thumbnail:
          type: string
          description: Image of the product
        category:
          type: string
          description: Category of the product
      example: 
        title: "Monitor"
        description: "A high-quality monitor"
        code: "as35gf"
        price: 100
        status: true
        stock: 1
        thumbnail: "No image"
        category: "Electronics"


    

